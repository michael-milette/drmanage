<?php

use Drupal\webform\Entity\WebformSubmission;
use Drupal\webform\WebformSubmissionForm;
use Drupal\drmanage\Controller\AwsformController;
use Drupal\drmanage\DrupalSite;

function drmanage_theme($existing, $type, $theme, $path) {
  return [
    'dashboard' => [
      'variables' => [
        'path' => $path . '/templates',
      ]
    ],
    'site-info' => [
      'variables' => [
        'appName' => '',
        'hostUrl' => '',
        'json' => [],
      ]
    ],
    // add more templates as needed
  ];
}

/**
 * Implements hook_page_attachments().
 *
 * Adds the drmanage libraries to each page.
 */
function drmanage_page_attachments(array &$page) {
  $page['#attached']['library'][] = 'drmanage/drmanage';

  $current_route = \Drupal::routeMatch()->getRouteName();
  if ($current_route == 'view.drupal_sites.page_1') {
    $page['#attached']['library'][] = 'drmanage/drupal-and-moodle-view';
  }

}


/**
 * Implements hook_entity_presave().
 * Process backup status using the last_backup_log and also the last_backup date.
 * Store the status to use with view styles to draw attention to backups that need it.
 * Added a text list field called field_status to the manage site already, it's primed.
 */
function drmanage_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {
  // Exit early if possible.
  if ($entity->getEntityTypeId() != 'node') {
    return;
  }
  if ($entity->bundle() == 'drupal_site') {
    // Return a date string from field_last_backup.
    $last_successful_backup = $entity->get('field_last_backup')->getString();
    $status = 'green';
    if (strtotime($last_successful_backup) <= strtotime('-7 days')) {
      $status = 'red';
    }
    if (strtotime($last_successful_backup) <= strtotime('-3 days')) {
      $status = 'pink';
    }
    if (strtotime($last_successful_backup) <= strtotime('-2 days')) {
      $status = 'orange';
    }
    $log_value = $entity->get('field_last_backup_log')->getString();

    if (strpos($log_value, 'og file is missing.') >= 1) {
      if ($status == 'green') {
        $status = 'orange';
      }
      $entity->set('field_status', $status);
    }
    else {
      $entity->set('field_status', $status);
    }
  }
}


function drmanage_webform_submission_insert(WebformSubmission $webform) {

  $data = $webform->getData();

  $url = $data['website_url'];

  $postdata = [
    'access_key' => $data['aws_access_key'],
    'secret_key' => $data['aws_secret_key'],
    'bucket_location' => $data['default_region'],
    'host_base' => 's3.amazonaws.com',
    'host_bucket' => $data['dns_style_bucket_hostname']
  ];

  // TODO - proxy information

  // use key 'http' even if you send the request to https://...
  $options = [
    'http' => [
      'header'  => "Content-type: application/x-www-form-urlencoded\r\n",
      'method'  => 'POST',
      'content' => http_build_query($postdata)
    ]
  ];

  $context  = stream_context_create($options);
  $result = file_get_contents($url, false, $context);
  if ($result === FALSE) {
    drupal_set_message('Failed for some reason', 'error');
  }
  else {
    drupal_set_message('Success! Maybe. '. print_r($result, true));
  }
}

function drmanage_cron() {
  $timeNow = date('H:i');

  if ($timeNow == '07:00') { // 3:00 AM EDT
    $sites = DrupalSite::all();
    foreach ($sites as $site) {
      if ($site->get_app_name() != 'localhost') {
        $site->start_backup_job();
      }
    }
  } else {
    $sites = DrupalSite::all();
    foreach ($sites as $site) {
      if ($job = $site->get_backup_job_id()) {
        $site->get_results($job);
      }
    }
  }

}
